<template>
  <view class="order-item-container column">
    <!--顶栏/基本信息-->
    <view class="order-header-container colunm">
      <view class="row-between">
        <view class="user-info-container">
          <image class="icon" src="/images/icons/idcard.png"/>
          <text class="sm ml10">{{order.customer.nickName ? order.customer.nickName : '微信用户'}}</text>
        </view>
        <text class="sm primary">{{order.statusText}}</text>
      </view>

      <view class="order-info-container row-between">
        <text>{{order.orderTime}}</text>
        <text>{{order.uuid}}</text>
      </view>
    </view>

    <!--商品区域-->
    <view class="order-goods-list-container" @tap="detail({{order.orderId}})">
      <repeat for="{{order.orderGoodsInfos}}" key="goodsId" index="index" item="item">
        <view class="{{index == 0 || expand[order.orderId] ? '' : 'order-goods-fold'}}">
          <OrderGoods :goods="item"></OrderGoods>
          <view class="hr" />
        </view>
      </repeat>
      <view wx:if="{{order.orderGoodsInfos.length > 1}}" class="goods-fold-btn row-center" @tap.stop="expand({{order.orderId}})">
        <text class="muted" wx:if="{{!expand[order.orderId]}}">查看全部 {{order.orderGoodsInfos.length}} 件商品</text>
        <text class="muted" wx:else>收起商品</text>
      </view>
    </view>


    <!--汇总信息-->
    <view class="order-footer-container row-end">
      <text class="mr20">共{{order.orderGoodsInfos.length}}件商品</text>
      <text>合计:</text>
      <text class="major xl mr20">￥{{order.finalPrice}}</text>
      <text>(含运费￥{{order.postFee}})</text>
    </view>

    <!--操作栏-->
    <view class="order-action-bar row-end" wx:if="{{action != 0}}">
      <view class="zan-btn zan-btn--small" @tap="again({{order}})">再来一单</view>
      <view class="zan-btn zan-btn--small" @tap="close({{order.orderId}})"  wx:if="{{order.status == 1}}">取消订单</view>
      <view class="zan-btn zan-btn--small zan-btn--primary" @tap="pay({{order.orderId}})" wx:if="{{order.status == 1}}">立即支付</view>
      <view class="zan-btn zan-btn--small zan-btn--primary" @tap="receive({{order.orderId}})" wx:if="{{order.status == 3}}">完成订单</view>

      <!--TODO 评价/退款-->
    </view>

  </view>
</template>

<script>
  import wepy from 'wepy';
  import cart from '../../api/cart';
  import order from '../../api/order';
  import Tips from '../../utils/Tips';
  import Event from '../../utils/Event';
  import OrderGoods from './goods';
  export default class OrderItem extends wepy.component {
    props = {
      order: {
        orderGoodsInfos: []
      },
      action: {
        default: true
      }
    };
    data = {
      expand: {}
    }
    methods = {
      /**
       * 商品展开收缩
       */
      expand(orderId) {
        this.expand[orderId] = !this.expand[orderId];
      },
      /**
       * 再来一单
       */
      async again(order) {
        // 清空购物车
        await cart.clear();
        // 商品加入购物车
        const list = order.orderGoodsInfos;
        console.info(list);
        for (const goods of list) {
          await cart.add(goods.goodsId, goods.count, goods.goodsSku);
        }
        // 跳转到首页，重新加载
        this.$root.$redirect('../shop/index');
      },
      detail(orderId) {
      },
      /**
       * 关闭订单
       */
      async close(orderId) {
        await Tips.confirm('确定关闭该订单？');
        try {
          await order.closeOrder(orderId);
          await Tips.success('关闭成功');
        } catch (e) {
          console.warn(e);
          await Tips.success('关闭失败');
        }
        Event.emit(Event.ORDER_LIST_UPDATE);
      },
      /**
       * 订单支付
       */
      async pay(orderId) {
        try {
          const payment = await order.prepayOrder(orderId);
          await order.wxpayOrder(payment);
          await Tips.success('支付成功');
        } catch (e) {
          console.warn(e);
          await Tips.success('支付取消');
        }
      },
      /**
       * 订单支付
       */
      async receive(orderId) {
        await Tips.confirm('是否已收到外卖？');
        try {
          await order.confirmOrder(orderId);
          await Tips.success('订单已完成');
        } catch (e) {
          console.warn(e);
          await Tips.success('操作失败');
        }
        Event.emit(Event.ORDER_LIST_UPDATE);
      }
    };
    components = {
      OrderGoods: OrderGoods
    };
  }
</script>

<style lang="scss">
  @import "../../styles/variable";

  .order-item-container {
    border-top: $border;
    border-bottom: $border;
    background-color: #FFF;
    margin-bottom: 10rpx;
  }

  /*顶栏*/
  .order-header-container {
    padding: 10rpx 25rpx 10rpx 20rpx;
  }

  /*底栏*/
  .order-footer-container {
    padding-left: 25rpx;
    padding-right: 20rpx;
    height: 70rpx;
  }

  /*顶栏订单信息*/
  .order-info-container{
    text{
      font-size: $text-xs;
      color:$color-muted;
    }
  }

  /* 操作栏 */
  .order-action-bar {
    border-top: $border;
    height: 90rpx;
    padding-right: 10rpx;
  }

  .order-goods-fold{
    display: none;
  }

  .goods-fold-btn{
    background-color: $color-bg-item;
    padding-top: 5rpx;
    padding-bottom: 5rpx;
  }
</style>

<template>
  <view class="buy-bar-placeholder">
  </view>
  <view class="row bargain-bar-box">
    <view class="column-center button-box">
      <button  open-type="getPhoneNumber" bindgetphonenumber="pick" plain>立即领取</button>
    </view>
  </view>
</template>

<script>
  import favorite from '../../api/favorite';
  import router from '../../mixins/router';
  import wepy from 'wepy';
  import Tips from '../../utils/Tips';
  import auth from '../../api/auth'
  import coupon from '../../api/coupon';
  import { connect } from 'wepy-redux';
  import store from '../../store/utils';
  @connect({
    shop: store.get('shop'),
    member: store.get('member'),
    user: store.get('user')
  })
  export default class BargainBar extends wepy.component {
    props = {
      rule: {}
    };
    data = {
      isFav: false,
      state: 'begin',
      id: ''
    };
    async onLoad() {
      await store.init();
    }

    methods = {
      async pick({detail}) {
        if (this.member == null) {
          if (detail.errMsg == 'getPhoneNumber:fail user deny') {
            await Tips.alert('请允许授权');
            return;
          }
          try {
            Tips.loading();
            const result = await auth.decodePhone(detail);
            if (result.memberId) {
              await Tips.success('注册成功');
              Event.emit(Event.MEMBER_CARD_UPDATE);
            }
            Tips.loaded();
          } catch (e) {
            console.info('注册失败', e);
            Tips.loaded();
          } finally {
            try {
              Tips.loading();
              await coupon.pick(this.coupon.id);
              await Tips.success('领取成功');
              await store.refresh('coupon');
              this.$root.$apply();
            } catch (err) {
              Tips.loaded();
              await Tips.confirm(err.message);
            }
          }
        } else {
          try {
            Tips.loading();
            await coupon.pick(this.coupon.id);
            await Tips.success('领取成功');
            await store.refresh('coupon');
            this.$root.$apply();
          } catch (err) {
            Tips.loaded();
            await Tips.confirm(err.message);
          }
        }
      }
    };
    computed = {
    };
    watch = {
      async rule(current, origin) {
        if (origin != null && origin.id != null) return;
        const result = await favorite.is(current.goods.id);
        this.isFav = result.isFavorite === 1;
        this.$apply();
      }
    };
    mixins = [router];
  }
</script>

<style lang="scss">
  @import "../../styles/variable";

  .bargain-bar-box{
    position: fixed;
    bottom: 0;
    height: 105rpx;
    width: 100%;
    border-top: $border;
    background-color: $color-primary;
    .button-box{
      height: 100%;
      width: 100%;
      background-color: $color-primary;
      border-left: $border;
      button{
        color: #fff;
      }
    }
    .btn-disabled{
      height: 100%;
      width: 100%;
      border-left: $border;
      background-color:$color-weak;
      button{
        color: #fff;
      }
    }
  }
  .buy-bar-placeholder{
    height: 105rpx;
    width: 100%;
  }
</style>

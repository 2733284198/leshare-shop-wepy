<template>
  <Tips/>
  <view class="container" wx:if="{{init}}">
    <AddressSelector :address.sync="address" />

    <view class="mt20"></view>
    <!--<view class="weui-cells-form">-->
      <!--<ActionSheet title="支付方式" describe="在线支付"/>-->
    <!--</view>-->

    <!--订单项目-->
    <OrderItem :order.sync="trade" action="0"></OrderItem>

    <!--订单详情-->
    <view class="weui-cells weui-cells_after-title weui-cells-merge-top">
      <view class="weui-cell weui-cell_access" @tap="paymentType">
        <view class="weui-cell__bd">支付方式</view>
        <view class="weui-cell__ft weui-cell__ft_in-access">{{trade.paymentText}}</view>
      </view>
      <view class="weui-cell weui-cell_access">
        <view class="weui-cell__bd">配送方式</view>

        <block wx:if="{{selectedDelivery}}">
          <text class="weui-cell__ft {{delilveryCount > 1 ? 'weui-cell__ft_in-access' : ''}}" wx:if="{{address}}">{{delilveryText}} </text>
          <text class="weui-cell__ft" wx:else>请选择收货地址</text>
        </block>
        <block wx:else>
          <text class="weui-cell__ft">起送金额￥{{limitPrice}}</text>
        </block>

      </view>
      <view class="weui-cell weui-cell_access">
        <view class="weui-cell__bd">优惠券
          <view class="label small primary pain" wx:if="{{coupons.length > 0}}">{{selectedCoupon ? '已选择' : coupons.length + '张可用'}}</view>
        </view>
        <view class="weui-cell__ft weui-cell__ft_in-access">{{coupons.length>0 ? ( selectedCoupon ? '-￥' + selectedCoupon.price : '未使用') : '无可用'}}</view>
      </view>
      <view class="weui-cell">
        <view class="weui-cell__bd">买家留言</view>
        <view class="weui-cell__ft">{{trade.message ? trade.message : '无'}}</view>
      </view>
    </view>

    <!--信息汇总-->
    <view class="panel summary-box mb20">
      <view class="price-box row-between">
        <text>商品金额</text>
        <text class="major">￥{{trade.dealPrice}}</text>
      </view>
      <view class="price-box row-between">
        <text>运费</text>
        <text class="major">+￥{{trade.postFee}}</text>
      </view>
      <view class="price-box row-between" wx:if="{{trade.couponPrice}}">
        <text>优惠券</text>
        <text class="major">-￥{{trade.couponPrice}}</text>
      </view>
      <view class="final-box" wx:if="{{trade.status != 1}}">
        <text class="lg">实付款：</text>
        <text class="lg major">￥{{trade.finalPrice}}</text>
      </view>
    </view>

    <!--操作底栏-->
    <OrderConfirmBar :trade.sync="trade" @confirm.user="confirm"/>

  </view>
</template>

<script>
  import wepy from 'wepy'
  import base from '../../mixins/base'
  import input from '../../mixins/input'
  import address from '../../api/address';
  import coupon from '../../api/coupon';
  import order from '../../api/order';
  import shop from '../../api/shop'
  // import Tips from '../../utils/Tips';
  // import Event from '../../utils/Event';
  import FormTips from '../../components/weui/tips';
  import ActionBar from '../../components/common/action_bar';
  import AddressSelector from '../../components/common/address_selector';
  import OrderConfirmBar from '../../components/order/confirm_bar';
  import ActionSheet from '../../components/weui/action_sheet';
  import OrderItem from '../../components/order/customer_item';
  import Tips from '../../utils/Tips';

  export default class OrderTrade extends wepy.page {
    def = {
      init: false,
      shop: {},
      trade: {
        orderGoodsInfos: []
      },
      address: {},
      delilveries: [],
      selectedDelivery: null,
      coupons: [],
      selectedCoupon: null
    }
    data = {...this.def}

    async onLoad ({trade}) {
      // 订单数据
      // this.trade = JSON.parse(trade);
      this.trade = {
        'dealPrice': '43.00',
        'finalPrice': '43.00',
        'paymentType': '1',
        'paymentText': '在线支付',
        'orderGoodsInfos': [
          {
            'goodsId': 3,
            'goodsName': '招牌培根蔬萃双层鸡肉堡（辣）',
            'imageUrl': 'http://ostb6zm4z.bkt.clouddn.com/FsTeNwC6NEpEnk9UShDMhaEI3aB7/small',
            'goodsPrice': '13.00',
            'count': 1,
            'skuText': '辣',
            'goodsSku': '辣'
          },
          {
            'goodsId': 16,
            'goodsName': '招牌鸡肉酱饭',
            'imageUrl': 'http://img.leshare.shop/Fg724pYGcXhIpJXhPkdqBw1DhEef/small',
            'goodsPrice': '15.00',
            'count': 1,
            'goodsSku': null
          },
          {
            'goodsId': 11,
            'goodsName': '什么鬼招牌鸡排',
            'imageUrl': 'http://img.leshare.shop/FtAqU26NliIbOjh9DHWA9bhFzqNJ/small',
            'goodsPrice': '15.00',
            'count': 1,
            'goodsSku': null
          }
        ]
      }
      // 默认地址
      this.address = await address.getDefault();
      // 配送方式
      this.delilveries = await order.queryPostPrice(this.address, this.trade.orderGoodsInfos);
      // 默认配送方式
      if (this.delilveries.delilveryList.length > 0) {
        this.selectedDelivery = this.delilveries.delilveryList[0];
        this.trade.deliveryType = this.selectedDelivery.type;
        this.trade.postFee = Number(this.selectedDelivery.fee).toFixed(2);
      }
      // 可用卡券
      this.coupons = await coupon.available(this.trade.orderGoodsInfos);
      // 店铺信息
      this.shop = await shop.info();
      this.loaded();
    };

    methods = {
      /**
       * 选择付款方式
       */
      async paymentType () {
        const trade = this.trade;
        await Tips.actionWithFunc(['在线支付', '线下支付'],
          () => {
            trade.paymentText = '在线支付'
            trade.paymentType = 1
          },
          () => {
            trade.paymentText = '线下支付'
            trade.paymentType = 0
          });
        this.$apply();
      },
      /**
       * 确定下单
       */
      async confirm() {
        // TODO 下单前订单状态检查
        // 数据准备
        this.trade.deliveryType = 'CITY';
        // 创建订单
        const trade = await order.createOrder(this.trade, this.address);
        // 发起预支付
        const payment = await order.prepayOrder(trade.orderId);
        Tips.loaded();
        // 微信支付
        try {
          await order.wxpayOrder(payment);
          await Tips.success('支付成功');
        } catch (e) {
          await Tips.success('支付取消');
        }
        this.$redirect('list');
      }
    }
    computed = {
      delilveryText() {
        if (this.selectedDelivery) {
          const fee = this.selectedDelivery.fee > 0 ? `￥${this.selectedDelivery.fee}` : '免配送费';
          return `${this.selectedDelivery.name} ${fee}`;
        }
      },
      delilveryCount() {
        if (this.delilveries.delilveryList) {
          return this.delilveries.delilveryList.length;
        } else {
          return 0;
        }
      }
    }
    components = {
      Tips: FormTips,
      ActionBar: ActionBar,
      ActionSheet: ActionSheet,
      AddressSelector: AddressSelector,
      OrderConfirmBar: OrderConfirmBar,
      OrderItem: OrderItem
    }
    mixins = [base, input]
    config = {
      navigationBarTitleText: '订单详情'
    }
  }
</script>


<style lang="scss">
  @import "../../styles/variable";

  //汇总栏
  .summary-box{
    padding: 10px 15px;

    .final-box{
      float: right;
      width: 100%;
      padding-top: 10rpx;
      border-top: $border;
      text-align: right;
    }

    .price-box{
      padding:5rpx 0;
    }
  }

</style>

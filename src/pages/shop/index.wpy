<template>
  <Loading :init.sync="init"/>

  <view class="container column" wx:if="{{init}}">

    <!-- 店铺信息区域 -->
    <ShopHeader />

    <!--功能区域-->
    <block>
      <ShopNav :mode.sync="mode" @change.user="change" :scene.sync="scene"/>
    </block>

    <!--主内容区域-->
    <CategoryBox top="145px" bottom="55px"/>

    <!-- 购物车 -->
    <block>
      <SliderCart @buy.user="buy" :mode.sync="mode" :scene.sync="scene"/>
    </block>

    <!--SKU选择器-->
    <SkuSelector/>

    <!--桌号弹出框-->
    <Notice />
  </view>
</template>

<script>
  import wepy from 'wepy';
  import { connect } from 'wepy-redux';
  import store from '../../store/utils';
  import auth from '../../api/auth';
  import CategoryBox from '../../components/template/category_box';
  import base from '../../mixins/base';
  import router from '../../mixins/router';
  import pagination from '../../mixins/pagination.wpy';
  import ShopHeader from '../../components/shop/header';
  import ShopNav from '../../components/shop/nav';
  import SkuSelector from '../../components/goods/popup_buy_panel';
  import SliderCart from '../../components/shop/slider_cart';
  import Loading from '../../components/common/loading';
  import Notice from '../../components/shop/notice';

  @connect({
    member: store.get('member'),
    card: store.get('card')
  })
  export default class ShopIndex extends wepy.page {
    data = {
      init: false,
      mode: 1,
      scene: null
    };
    async onLoad ({mode, scene}) {
      if (scene != null) {
        this.scene = scene;
        this.mode = 2;
        const number = scene.slice(6);
        const notice = {
          title: '提示',
          btnText: '我知道了',
          content: `您当前在${number}号桌，在线下单支付后餐品会按桌位号送达。`
        };
        this.$invoke('Notice', 'open', notice);
      } else {
        this.mode = mode;
        this.scene = null
      }
      // 用户信息
      await auth.user();
      // 初始化Store
      await store.init();
      this.loaded();
    };
    /**
     * 页面分享
     */
    onShareAppMessage () {
      return {};
    }
    methods = {
      change (mode) {
        this.mode = mode
      }
    };
    computed = {
    };
    components = {
      ShopHeader: ShopHeader,
      ShopNav: ShopNav,
      SliderCart: SliderCart,
      SkuSelector: SkuSelector,
      CategoryBox: CategoryBox,
      Loading: Loading,
      Notice: Notice
    };
    mixins = [base, pagination, router];
    config = {
    };
  }
</script>

<style lang="scss">
  @import "../../styles/variable";

</style>

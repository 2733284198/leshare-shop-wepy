<template>
  <Loading :init.sync="init"/>
  <CoverPanel :display.sync="display" zIndex="99" @tap.user="close"/>
  <view class="container" wx:if="{{init}}">

    <view class="sub-shop-top-box">
      <!--tab栏-->
      <view class="row">
        <block wx:for="{{tabs.list}}" wx:for-item="tab" wx:for-index="index" wx:key="index">
          <view @tap="selectTab({{tab}})" class="tab-box row-center">
            <text class="{{tab.id === tabs.selectedId ? 'primary' : ''}}">{{tab.title}}</text>
            <icon class="{{tab.id === tabs.selectedId ? 'tab-up' : 'tab-down tab-icon-box'}} xsmall"/>
          </view>
        </block>
      </view>
      
      <!--tab划出内容栏-->
      <view class="tabs-box" wx:if="{{display}}">
        <view wx:if="{{tabs.selectedId}}" class="row">
          <text class="{{selectTabTitle === '全部分类' ? 'select-tab-box' : ''}} tabs-item-box" wx:if="{{tabs.selectedId === 'TYPE'}}"  @tap="clearSelect('全部分类')">全部分类</text>
          <text class="{{selectTabTitle === '全城' ? 'select-tab-box' : ''}} tabs-item-box" wx:if="{{tabs.selectedId === 'AREA'}}"  @tap="clearSelect('全城')">全城</text>
          <text class="{{selectTabTitle === '智能排序' ? 'select-tab-box' : ''}} tabs-item-box" wx:if="{{tabs.selectedId === 'SORT'}}"  @tap="clearSelect('智能排序')">智能排序</text>
          <block wx:for="{{selectTabList}}" wx:for-item="tag" wx:for-index="index" wx:key="index">
            <text @tap="select({{tag}})" class="tabs-item-box {{selectTabTitle === tag ? 'select-tab-box' : ''}}">{{tag}}</text>
          </block>
        </view>
      </view>
    </view>

    <view wx:if="{{location}}" class="address-box row">
      <text class="sm">当前位置：{{address}}</text>
      <text class="btn-box xs ml10" @tap="relocation">[重新定位]</text>
    </view>

    <!--列表展现-->
    <view wx:for="{{page.list}}" wx:for-index="index" wx:for-item="item" wx:key="index" class="shop-box column">
      <view class="row" style="align-items: flex-start;">
        <image src="{{item.avatar}}" class="avatar-image-box mr10"/>
        <view class="column">
          <view class="column" @tap="shopDetail({{item}})">
            <view>
              <text class="list-name-box">{{item.name}}</text>
              <block wx:for="{{item.tags.ACTIVITY}}" wx:for-item="item" wx:for-index="index" wx:key="index">
                <text class="list-tag-box white xxs ml10">{{item}}</text>
              </block>
            </view>
            <view class="column">
              <view class="row-between" style="width: 580rpx">
                <view class="row">
                  <block wx:for="{{item.tags.TYPE}}" wx:for-item="tag" wx:for-index="index" wx:key="index">
                    <text class="mr10 xs">{{tag}}</text>
                  </block>
                  <text wx:if="{{item.tags.TYPE}}" class="xs mr10">|</text>
                  <block wx:for="{{item.tags.BUSSINESS_AREA}}" wx:for-item="tag" wx:for-index="index" wx:key="index">
                    <text class="mr10 xs">{{tag}}</text>
                  </block>
                </view>
                <view class="row">
                  <text class="muted xs mr10">销量</text>
                  <text class="muted xs mr10" wx:if="{{item.distance > 0}}">|</text>
                  <text class="muted xs" wx:if="{{item.distance > 0}}">{{item.distance}}m</text>
                </view>
              </view>
              <text class="muted xs list-address-box">{{item.address}}</text>
              <!--<view>-->
                <!--<block wx:for="{{item.tags.NORMAL}}" wx:for-item="item" wx:for-index="index" wx:key="index">-->
                  <!--<text class="list-muted-tag-box muted xxs mr10">{{item}}</text>-->
                <!--</block>-->
              <!--</view>-->
            </view>
          </view>

          <view wx:for="{{item.goodsList}}" wx:for-index="goodsIndex" wx:for-item="goodsItem" wx:key="goodsIndex" class="column mt10">
            <view class="row" @tap="goodsDetail({{goodsItem}})">
              <image src="{{goodsItem.imageUrl}}/small" class="goods-image-box mr10"/>
              <view class="column">
                <text>{{goodsItem.name}}</text>
                <text class="muted xxs">销量{{goodsItem.salesVolume}}</text>
                <view class="row">
                  <text class="major xs">￥</text>
                  <text class="major lg">{{goodsItem.price}}</text>
                  <text class="xs cancel ml10">￥{{goodsItem.originalPrice}}</text>
                </view>
              </view>
            </view>
          </view>
        </view>
      </view>
    </view>

    <!-- 加载提示 -->
    <Loadmore :page.sync="page"/>

    <!--提示框-->
    <Notice @close.user="close" @tap.user="getLocation"/>
  </view>

  <!--占位符-->
  <Placeholder :show.sync="isPageEmpty" message="您还没有相关商户信息"/>
</template>

<script>
  import wepy from 'wepy';
  import shop from '../../api/shop';
  import base from '../../mixins/base';
  import pagination from '../../mixins/pagination';
  import Placeholder from '../../components/common/placeholder';
  import Loading from '../../components/common/loading';
  import Loadmore from '../../components/weui/loadmore';
  import Tab from '../../components/zanui/tab';
  import _ from 'underscore';
  import CoverPanel from '../../components/common/cover_panel';
  import Notice from '../../components/shop/notice';
  import map from '../../api/map';

  export default class SubShopList extends wepy.page {
    data = {
      init: true,
      page: {
        list: [
        ]
      },
      tabs: {
        list: [
          {id: 'TYPE', title: '全部分类'},
          {id: 'AREA', title: '全城'},
          {id: 'SORT', title: '智能排序'}
        ],
        selectedId: null
      },
      tagList: {
        SORT: ['离我最近', '销量最高']
      },
      selectTabList: [],
      tag: null,
      tags: [],
      location: null,
      display: false,
      area: null,
      isLocation: false,
      address: null
    }
    async onLoad () {
      try {
        this.location = await wepy.getLocation();
      } finally {
        const tags = await shop.subShopTag();
        this.tagList = _.extend(this.tagList, tags);
        await this.updateList();
      }
    };
    async onShow() {
      if (this.isLocation) {
        this.location = await wepy.getLocation();
        this.isLocation = false;
        await this.updateList();
      }
    };
    params() {
      let param = {}
      if (this.tag && this.area) {
        param.tag = this.tag
        param.area = this.area
      } else if (!this.tag && this.area) {
        param.area = this.area
      } else if (this.tag && !this.area) {
        param.tag = this.tag
      }
      if (this.location) {
        param.longitude = this.location.longitude
        param.latitude = this.location.latitude
      }
      return param
    }
    // 商铺列表刷新
    async updateList() {
      this.page = await shop.subShopList();
      if (this.location) {
        this.position();
      }
      await this.next();
    }
    // 重新定位
    async position() {
      const { latitude, longitude } = this.location
      const addressInfo = await map.reverse(latitude, longitude)
      this.address = addressInfo.current.display
      this.$apply();
    }
    methods = {
      // 选取tab
      selectTab(tab) {
        this.tabs.selectedId = tab.id
        this.selectTabList = this.tagList[tab.id]
        this.display = true
      },
      // 清空选择的参数
      async clearSelect(tag) {
        const oldTag = this.tabs.list.find(item => item.id === this.tabs.selectedId).title
        this.tags = _.without(this.tags, oldTag)
        if (this.tags.length > 0) {
          this.tag = this.tags.join(',')
        } else {
          this.tag = null
        }
        this.tabs.list.find(item => item.id === this.tabs.selectedId).title = tag
        this.display = false
        this.tabs.selectedId = null
        await this.updateList()
      },
      // 选择标签
      async select(tag) {
        if (tag === '离我最近' && !this.location) {
          try {
            this.location = await wepy.getLocation()
          } catch (e) {
            const notice = {
              title: '提示',
              btnText: '确定',
              content: `您尚未定位，无法找到距离最近的商铺，您确定开启定位？`,
              isDouble: true
            };
            this.$invoke('Notice', 'open', notice);
          }
        } else {
          this.tabs.list.find(item => item.id === this.tabs.selectedId).title = tag
          if (this.tabs.selectedId === 'AREA') {
            this.area = tag
          } else {
            this.tags.push(tag)
            this.tags = _.uniq(this.tags)
            this.tag = this.tags.join(',')
          }
        }
        this.display = false
        this.tabs.selectedId = null
        await this.updateList()
      },
      close() {
        this.display = false
        this.tabs.selectedId = null
      },
      // 重新授权获取坐标
      async getLocation() {
        this.isLocation = true
        // this.location = await wepy.getLocation()
        // await this.updateList();
      },
      relocation() {
        this.position();
      },
      shopDetail(subShop) {
        this.$navigate(`/pages/shop/sub_shop_detail?subShopId=${subShop.shopId}`)
      },
      goodsDetail(goods) {
        this.$navigate(`/pages/goods/detail?goodsId=${goods.id}`)
      }
    };
    computed = {
      // 选中标签
      selectTabTitle() {
        if (!this.tabs.selectedId) return
        return this.tabs.list.find(item => item.id === this.tabs.selectedId).title
      }
    };
    events = {};
    components = {
      Placeholder: Placeholder,
      Loading: Loading,
      Loadmore: Loadmore,
      tab: Tab,
      CoverPanel: CoverPanel,
      Notice: Notice
    };
    mixins = [base, pagination];
    config = {
      navigationBarTitleText: '商户',
      enablePullDownRefresh: true
    };
  }
</script>

<style lang="scss">
  @import "../../styles/variable";
  .sub-shop-top-box{
    position: relative;
    z-index: 1000;
    background-color: white;
    border-bottom: $border;
  }
  .tab-icon-box{
    color: $color-normal;
  }
  .list-name-box{
    font-weight: bold;
  }
  .list-tag-box{
    border-radius: 4rpx;
    padding: 0 5rpx;
    line-height: $text-xxs;
    background-color: $color-primary;
  }
  .list-muted-tag-box{
    border:1px solid $color-muted;
    border-radius: 4rpx;
    padding: 0 5rpx;
    line-height: $text-xxs;
  }
  .address-box{
    padding: 10rpx 20rpx;
    border-bottom: $border;
    background-color: white;
    .btn-box{
      padding: 0 6rpx;
      color: lighten($color-danger, 10%);
    }
  }
  .list-address-box{
    white-space:nowrap;
    overflow:hidden;
    text-overflow:ellipsis;
    width: 400rpx;
  }
  .shop-box{
    padding: 20rpx;
     background-color: white;
  }
  .shop-box + .shop-box{
    border-top: $border;
  }
  .avatar-image-box{
    width: 120rpx;
    height: 120rpx;
    border: $border;
  }
  .goods-image-box{
    width: 120rpx;
    height: 120rpx;
    border: $border;
  }
  .tabs-box{
    position: absolute;
    background-color: white;
    width: 100%;
    padding: 20rpx;
  }
  .tab-box{
    width: 33%;
    height: 80rpx;
  }
  .tabs-item-box{
    padding: 14rpx 30rpx;
    border-radius: 10rpx;
    background-color: #F7F7F7;
    margin: 16rpx;
    font-size: $text-xs;
  }
  .select-tab-box{
    background-color: lighten($color-primary, 10%);
    color: white;
  }
</style>

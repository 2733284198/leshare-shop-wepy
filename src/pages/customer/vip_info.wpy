<template>
  <view class="container" wx:if="{{init}}">
    <view class="column-center">
      <view class="avatar-box">
        <image class="icon-xxl logo-image mb20" src="{{shopInfo.avatar}}"/>
        <text class="muted mt10">{{shopInfo.name}}</text>
      </view>

      <view class="dash-line"/>
      <view class="column-center member-box">
        <image class="avatar-image" src="{{userInfo.avatarUrl}}"/>
        <image class="qrcode-image" src="{{member.codeUrl}}"/>
      </view>
    </view>
    <view class="column-center number-box">
      <view class="column-center mt20 mb20">
        <text class="number-text mb20">{{numberText}}</text>
        <text class="muted mt10 mb20">使用时向服务员出示此页面</text>
      </view>
      <view class="dash-line"/>
      <view wx:if="{{scanning}}">
        <text class="muted mt10">扫描成功：已新增消费{{costPrice}}元</text><text class="muted mt10" wx:if="{{bonus}}">，获得{{bonus}}积分</text>
      </view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy';
  import auth from '../../api/auth';
  import base from '../../mixins/base';
  import vip from '../../api/member_card';
  import shopInfo from '../../api/shop';
  import member from '../../api/member';
  import Tips from '../../utils/Tips';
  import Event from '../../utils/Event';
  import WxUtils from '../../utils/WxUtils';
  import Cache from '../../utils/Cache';
  let interval = null;
  export default class VipInfo extends wepy.page {
    def = {
      init: false,
      userInfo: null,
      shopInfo: null,
      cardInfo: null,
      member: null,
      scanning: false,
      bonus: 0,
      costPrice: 0
    };
    data = {...this.def};

    async onLoad (options, {preload}) {
      // 要求会员授权
      const result = await auth.user({block: true, redirect: true});
      if (!result) return;
      this.shopInfo = await Cache.shop();
      // 加载数据
      if (preload && preload.param) {
        // preload 情况
        const param = preload.param;
        this.userInfo = param.userInfo;
        this.cardInfo = param.vipCard;
        this.member = param.member;
      } else {
        // 直接进入页面的情况
        const {card, member} = await Cache.vip();
        this.member = member;
        this.vipCard = card;
        this.userInfo = this.loadUserInfo();
      }
      // 没注册的会员引导注册
      if (this.member == null) {
        await Tips.alert('请先注册会员');
        this.$redirect('/pages/customer/registe_member');
        return;
      }
      // 增加定时器扫描
      interval = setInterval(async () => {
        Tips.setLoading();
        await this.getTotalCost();
        Tips.loaded();
      }, 5000);
      this.loaded();
    };
    onHide () {
      clearInterval(interval)
    }
    onUnload() {
      // 清理定时器
      clearInterval(interval);
    }
    loadUserInfo() {
      try {
        const value = wepy.getStorageSync('user');
        if (value) {
          return value;
        }
      } catch (e) {
        console.log(e)
      }
    }
    async getTotalCost() {
      const memberInfo = await member.info();
      if (this.member.totalCost != memberInfo.totalCost) {
        // 新增消费金额
        this.costPrice = memberInfo.totalCost - this.member.totalCost;
        // 新增积分
        const bonusRule = this.cardInfo.bonusRule;
        if (bonusRule != null) {
          if ((this.costPrice % bonusRule.costMoneyUnit) == 0) {
            this.bonus = (bonusRule.increaseBonus / bonusRule.costMoneyUnit) * this.costPrice;
          } else {
            this.bonus = (bonusRule.increaseBonus / bonusRule.costMoneyUnit) * (this.costPrice - (this.costPrice % bonusRule.costMoneyUnit));
          }
        }
        this.scanning = true;
        Tips.success('扫描成功！');
        await Cache.vip(true);
        Event.emit(Event.MEMBER_CARD_UPDATE);
        clearInterval(interval);
        this.loaded();
        setTimeout(async () => WxUtils.backOrRedirect('/pages/customer/index'), 3000);
      }
    };
    computed = {
      numberText() {
        if (this.member == null) return;
        const number = this.member.memberNumber;
        let text = '';
        for (let i = 0; i < number.length; i++) {
          text += number[i];
          if ((i + 1) % 4 == 0) {
            text += ' ';
          }
        }
        return text;
      }
    };
    config = {
      navigationBarTitleText: '会员卡号'
    };
    mixins = [base];
  }
</script>
<style lang="scss">
  @import "../../styles/variable";

  .container {
    justify-content: flex-start;
    width: 100%;
    height: 100%;
    background-color: white;
    .logo-image {
      border: $border;
      border-radius: 50%;
      margin-top: 40rpx;
    }
    .dash-line {
      width: 70%;
      color: #EDEDED;
      border-bottom: 1px dashed #EDEDED;
    }
    .member-box{
      position: relative;
      top: 110px;
      .qrcode-image {
      position: absolute;
      width: 200px;
      height: 200px;
      }
      .avatar-image {
        position: absolute;
        z-index: 1;
        border-radius: 50%;
        width: 90px;
        height: 90px;
      }
    }
    .avatar-box{
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      height: 150px;
    }
    .number-box{
      position: relative;
      top: 210px;
    }
    .number-text{
      font-size: 40rpx;
    }
  }
</style>
